{"version":3,"file":"ngx-bootstrap-positioning.js","sources":["ngx-bootstrap/positioning/utils/getStyleComputedProperty.ts","ngx-bootstrap/positioning/utils/getParentNode.ts","ngx-bootstrap/positioning/utils/getScrollParent.ts","ngx-bootstrap/positioning/utils/isBrowser.ts","ngx-bootstrap/positioning/utils/isIE.ts","ngx-bootstrap/positioning/utils/getOffsetParent.ts","ngx-bootstrap/positioning/utils/isOffsetContainer.ts","ngx-bootstrap/positioning/utils/getRoot.ts","ngx-bootstrap/positioning/utils/findCommonOffsetParent.ts","ngx-bootstrap/positioning/utils/getBordersSize.ts","ngx-bootstrap/positioning/utils/getWindowSizes.ts","ngx-bootstrap/positioning/utils/getScroll.ts","ngx-bootstrap/positioning/utils/getClientRect.ts","ngx-bootstrap/positioning/utils/getBoundingClientRect.ts","ngx-bootstrap/positioning/utils/includeScroll.ts","ngx-bootstrap/positioning/utils/getOffsetRectRelativeToArbitraryNode.ts","ngx-bootstrap/positioning/utils/getViewportOffsetRectRelativeToArtbitraryNode.ts","ngx-bootstrap/positioning/utils/isFixed.ts","ngx-bootstrap/positioning/utils/getFixedPositionOffsetParent.ts","ngx-bootstrap/positioning/utils/getBoundaries.ts","ngx-bootstrap/positioning/utils/computeAutoPlacement.ts","ngx-bootstrap/positioning/utils/getOffsets.ts","ngx-bootstrap/positioning/utils/getOppositePlacement.ts","ngx-bootstrap/positioning/utils/getOppositeVariation.ts","ngx-bootstrap/positioning/utils/getOuterSizes.ts","ngx-bootstrap/positioning/utils/getReferenceOffsets.ts","ngx-bootstrap/positioning/utils/getTargetOffsets.ts","ngx-bootstrap/positioning/utils/isModifierEnabled.ts","ngx-bootstrap/positioning/utils/isNumeric.ts","ngx-bootstrap/positioning/utils/updateContainerClass.ts","ngx-bootstrap/positioning/utils/setStyles.ts","ngx-bootstrap/positioning/modifiers/arrow.ts","ngx-bootstrap/positioning/modifiers/flip.ts","ngx-bootstrap/positioning/modifiers/initData.ts","ngx-bootstrap/positioning/modifiers/preventOverflow.ts","ngx-bootstrap/positioning/modifiers/shift.ts","ngx-bootstrap/positioning/ng-positioning.ts","ngx-bootstrap/positioning/positioning.service.ts"],"names":["runIsIE"],"mappings":"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","sourcesContent":["/**\n * Get CSS computed property of the given element\n */\nexport function getStyleComputedProperty(element: HTMLElement, property?: string): any {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n\n  return property ? css[property as any] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n */\nexport function getParentNode(element: any): any {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n","/**\n * Returns the scrolling parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function getScrollParent(element: any): any {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n    default:\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n","/**\n * Determines if the browser is Internet Explorer\n */\nimport { isBrowser } from './isBrowser';\n\nconst isIE11 = isBrowser && !!((window as any).MSInputMethodContext && (document as any).documentMode);\nconst isIE10 = isBrowser && !!((window as any).MSInputMethodContext && /MSIE 10/.test((navigator as any).userAgent));\n\nexport function isIE(version?: number) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n","/**\n * Returns the offset parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getOffsetParent(element: any): any {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n\n  // Skip hidden elements which don't have an offsetParent\n  let sibling: HTMLElement | null;\n\n  while (offsetParent === noOffsetParent\n         && element.nextElementSibling\n         && sibling !== element.nextElementSibling) {\n\n      sibling = element.nextElementSibling;\n      offsetParent = sibling.offsetParent;\n    }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import { getOffsetParent } from './getOffsetParent';\n\nexport function isOffsetContainer(element: any) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\nexport function getRoot(node: Node): any {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Finds the offset parent common to the two provided nodes\n */\nimport { isOffsetContainer } from './isOffsetContainer';\nimport { getRoot } from './getRoot';\nimport { getOffsetParent } from './getOffsetParent';\n\nexport function findCommonOffsetParent(element1: HTMLElement, element2: HTMLElement): any {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  /* tslint:disable-next-line: no-bitwise */\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Helper to detect borders of a given element\n */\n\nexport function getBordersSize(styles: CSSStyleDeclaration, axis: string) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width` as any]) +\n    parseFloat(styles[`border${sideB}Width` as any])\n  );\n}\n","import { isIE } from './isIE';\n\nfunction getSize(axis: string, body: HTMLElement, html: HTMLElement, computedStyle: CSSStyleDeclaration) {\n  return Math.max(\n    (body as any)[`offset${axis}`],\n    (body as any)[`scroll${axis}`],\n    (html as any)[`client${axis}`],\n    (html as any)[`offset${axis}`],\n    (html as any)[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt((html as any)[`offset${axis}`], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}` as any], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}` as any], 10))\n    : 0\n  );\n}\n\nexport function getWindowSizes(document: Document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\nexport function getScroll(element: HTMLElement, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n */\nimport { Offsets } from '../models';\n\nexport function getClientRect(offsets: Offsets): Offsets {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  };\n}\n","/**\n * Get bounding client rect of given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getBordersSize } from './getBordersSize';\nimport { getWindowSizes } from './getWindowSizes';\nimport { getScroll } from './getScroll';\nimport { getClientRect } from './getClientRect';\nimport { isIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getBoundingClientRect(element: HTMLElement): Offsets {\n  let rect: any = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {\n    return undefined;\n  }\n\n  const result: any = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes: any = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","/**\n * Sum or subtract the element scroll values (left and top) from a given rect object\n */\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function includeScroll(rect: Offsets, element: HTMLElement, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n\n  return rect;\n}\n","import { getBoundingClientRect } from './getBoundingClientRect';\nimport { getClientRect } from './getClientRect';\nimport { getScrollParent } from './getScrollParent';\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { includeScroll } from './includeScroll';\nimport { isIE as runIsIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getOffsetRectRelativeToArbitraryNode(\n  children: HTMLElement,\n  parent: HTMLElement,\n  fixedPosition = false\n): Offsets {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect: any = getBoundingClientRect(children);\n  const parentRect: any = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  let offsets: Offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import { getClientRect } from './getClientRect';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function getViewportOffsetRectRelativeToArtbitraryNode(element: HTMLElement, excludeScroll = false): Offsets {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n    left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n","/**\n * Check if the given element is fixed or is inside a fixed parent\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function isFixed(element: HTMLElement): boolean {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n","/**\n * Finds the first parent of an element that has a transformed property defined\n */\n\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getFixedPositionOffsetParent(element: HTMLElement): HTMLElement {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n   return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n","/**\n * Computed the boundaries limits and return them\n */\nimport { getScrollParent } from './getScrollParent';\nimport { getParentNode } from './getParentNode';\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getViewportOffsetRectRelativeToArtbitraryNode } from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport { getWindowSizes } from './getWindowSizes';\nimport { isFixed } from './isFixed';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\n\nexport function getBoundaries(\n  target: HTMLElement,\n  host: HTMLElement,\n  padding = 0,\n  boundariesElement: string,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries: any = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(target.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = Number(height) + Number(offsets.top);\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = Number(width) + Number(offsets.left);\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\nimport { getBoundaries } from './getBoundaries';\nimport { Offsets } from '../models';\n\nfunction getArea({ width, height }: { [key: string]: number }) {\n  return width * height;\n}\n\nexport function computeAutoPlacement(\n  placement: string,\n  refRect: Offsets,\n  target: HTMLElement,\n  host: HTMLElement,\n  allowedPositions: any[] = ['top', 'bottom', 'right', 'left'],\n  boundariesElement = 'viewport',\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n\n  const rects: any = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key])\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  let filteredAreas: any[] = sortedAreas.filter(\n    ({ width, height }) => {\n      return width >= target.clientWidth\n        && height >= target.clientHeight;\n    }\n  );\n\n  filteredAreas = filteredAreas.filter((position: any) => {\n    return allowedPositions\n      .some((allowedPosition: string) => {\n        return allowedPosition === position.key;\n      });\n  });\n\n  const computedPlacement: string = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split(' ')[1];\n\n  // for tooltip on auto position\n  target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${computedPlacement}`);\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import { Data, Offsets } from '../models';\n\nexport function getOffsets(data: Data): Offsets {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left),\n    top: Math.round(data.offsets.target.top),\n    bottom: Math.round(data.offsets.target.bottom),\n    right: Math.floor(data.offsets.target.right)\n  };\n}\n","/**\n * Get the opposite placement of the given one\n */\nexport function getOppositePlacement(placement: string) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\n  return placement.replace(/left|right|bottom|top/g, matched => (hash as any)[matched]);\n}\n","/**\n * Get the opposite placement variation of the given one\n */\nexport function getOppositeVariation(variation: string) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n */\nexport function getOuterSizes(element: any) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n","/**\n * Get offsets to the reference element\n */\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\nimport { Offsets } from '../models';\n\nexport function getReferenceOffsets(\n  target: HTMLElement,\n  host: HTMLElement,\n  fixedPosition: boolean = null\n): Offsets {\n  const commonOffsetParent = fixedPosition\n    ? getFixedPositionOffsetParent(target)\n    : findCommonOffsetParent(target, host);\n\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get offsets to the target\n */\nimport { getOppositePlacement } from './getOppositePlacement';\nimport { getOuterSizes } from './getOuterSizes';\nimport { Offsets } from '../models';\n\nexport function getTargetOffsets(\n  target: HTMLElement,\n  hostOffsets: Offsets,\n  position: string\n): Offsets {\n  const placement = position.split(' ')[0];\n\n  // Get target node sizes\n  const targetRect = getOuterSizes(target);\n\n  // Add position, width and height to our offsets object\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  };\n\n  // depending by the target placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  (targetOffsets as any)[mainSide] =\n    hostOffsets[mainSide] +\n    hostOffsets[measurement] / 2 -\n    targetRect[measurement] / 2;\n\n  (targetOffsets as any)[secondarySide] = placement === secondarySide\n    ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement]\n    : (hostOffsets as any)[getOppositePlacement(secondarySide)];\n\n  return targetOffsets;\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n */\nexport function isModifierEnabled(options: any, modifierName: string) {\n  return options\n    && options.modifiers\n    && options.modifiers[modifierName]\n    && options.modifiers[modifierName].enabled;\n}\n","/**\n * Tells if a given input is a number\n */\nexport function isNumeric(n: any) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","/**\n * Update class for the given popper\n */\nimport { Renderer2 } from '@angular/core';\nimport { Data } from '../models';\n\nexport function updateContainerClass(data: Data, renderer?: Renderer2): void {\n  const target = data.instance.target;\n\n  let containerClass = target.className;\n\n  if (data.placementAuto) {\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n    containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\n\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n      containerClass += ' popover-auto';\n    }\n\n    if (containerClass.indexOf('tooltip') !== -1  && containerClass.indexOf('tooltip-auto') === -1) {\n      containerClass += ' tooltip-auto';\n    }\n  }\n\n  containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', containerClass);\n\n    return;\n  }\n\n  target.className = containerClass;\n}\n","/**\n * Set the style to the given popper\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { isNumeric } from './isNumeric';\n\nexport function setStyles(element: HTMLElement, styles: any, renderer?: Renderer2) {\n  Object.keys(styles).forEach((prop: any) => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n      isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n\n      return;\n    }\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n","import { getClientRect, getOuterSizes, getStyleComputedProperty } from '../utils';\nimport { Data } from '../models';\n\nexport function arrow(data: Data) {\n  let targetOffsets = data.offsets.target;\n  // if arrowElement is a string, suppose it's a CSS selector\n  const arrowElement: HTMLElement | null = data.instance.target.querySelector('.arrow');\n\n  // if arrowElement is not found, don't run the modifier\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n  const placementVariation = data.placement.split(' ')[1];\n\n  // top/left side\n  if (data.offsets.host[opSide] - arrowElementSize < (targetOffsets as any)[side]) {\n    (targetOffsets as any)[side] -=\n      (targetOffsets as any)[side] - (data.offsets.host[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (Number((data as any).offsets.host[side]) + Number(arrowElementSize) > (targetOffsets as any)[opSide]) {\n    (targetOffsets as any)[side] +=\n      Number((data as any).offsets.host[side]) + Number(arrowElementSize) - Number((targetOffsets as any)[opSide]);\n  }\n  targetOffsets = getClientRect(targetOffsets);\n\n  // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n\n  // compute center of the target\n  let center: number;\n  if (!placementVariation) {\n    center = Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n  } else {\n    const targetBorderRadius = parseFloat(css.borderRadius);\n    const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n    center = side === placementVariation ?\n      Number((data as any).offsets.host[side]) + targetSideArrowOffset :\n      Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n  }\n\n  let sideValue =\n    center - (targetOffsets as any)[side] - targetMarginSide - targetBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its target\n  sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  data.instance.arrow = arrowElement;\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getBoundaries,\n  getClientRect,\n  getOppositeVariation,\n  getTargetOffsets,\n  isModifierEnabled\n} from '../utils';\n\nimport { Data } from '../models';\n\nexport function flip(data: Data): Data {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...getTargetOffsets(\n        data.instance.target,\n        data.offsets.host,\n        data.placement\n      )\n    };\n\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'viewport',\n    false // positionFixed\n  );\n\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n\n  const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n  const flipOrder = [placement, adaptivePosition];\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split(' ')[0];\n\n    // using floor because the host offsets may contain decimals we are not going to consider here\n    const overlapsRef =\n      (placement === 'left' &&\n        Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left)) ||\n      (placement === 'right' &&\n        Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right)) ||\n      (placement === 'top' &&\n        Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top)) ||\n      (placement === 'bottom' &&\n        Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom));\n\n    const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n    const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n    const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      ((isVertical && variation === 'left' && overflowsLeft) ||\n        (isVertical && variation === 'right' && overflowsRight) ||\n        (!isVertical && variation === 'left' && overflowsTop) ||\n        (!isVertical && variation === 'right' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n\n      data.offsets.target = {\n        ...data.offsets.target,\n        ...getTargetOffsets(\n          data.instance.target,\n          data.offsets.host,\n          data.placement\n        )\n      };\n    }\n  });\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getReferenceOffsets,\n  getTargetOffsets\n} from '../utils';\n\nimport { Data, Options } from '../models';\n\nexport function initData(\n  targetElement: HTMLElement, hostElement: HTMLElement, position: string, options: Options\n): Data {\n\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n\n  if (!position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)\n    && !position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)) {\n      /* tslint:disable-next-line: no-parameter-reassignment */\n      position = 'auto';\n    }\n\n  const placementAuto = !!position.match(/auto/g);\n\n  // support old placements 'auto left|right|top|bottom'\n  let placement = position.match(/auto\\s(left|right|top|bottom)/)\n    ? position.split(' ')[1] || 'auto'\n    : position;\n\n  // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n  const matches = placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);\n  if (matches) {\n    placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n  }\n\n  // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n  if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n    placement = 'auto';\n  }\n\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n\n  placement = computeAutoPlacement(\n    placement,\n    hostElPosition,\n    targetElement,\n    hostElement,\n    options ? options.allowedPositions : undefined\n  );\n\n  return {\n    options,\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: null\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: null\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n","import { getBoundaries, isModifierEnabled } from '../utils';\nimport { Data } from '../models';\n\nexport function preventOverflow(data: Data) {\n\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  }\n\n  // NOTE: DOM access here\n  // resets the targetOffsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'scrollParent',\n    false // positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n\n  const order = ['left', 'right', 'top', 'bottom'];\n\n  const check = {\n    primary(placement: string) {\n      let value = (data as any).offsets.target[placement];\n      if (\n        (data as any).offsets.target[placement] < boundaries[placement] &&\n        !false // options.escapeWithReference\n      ) {\n        value = Math.max((data as any).offsets.target[placement], boundaries[placement]);\n      }\n\n      return { [placement]: value };\n    },\n    secondary(placement: string) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n      if (\n        (data as any).offsets.target[placement] > boundaries[placement] &&\n        !false // escapeWithReference\n      ) {\n        value = Math.min(\n          data.offsets.target[mainSide],\n          boundaries[placement] -\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\n        );\n      }\n\n      return { [mainSide]: value };\n    }\n  };\n\n  let side: string;\n\n  order.forEach(placement => {\n    side = ['left', 'top']\n      .indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...(check as any)[side](placement)\n    };\n\n  });\n\n  return data;\n}\n","import { Data } from '../models';\n\nexport function shift(data: Data): Data {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftVariation = placement.split(' ')[1];\n\n  if (shiftVariation) {\n    const { host, target } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: host[side] },\n      end: {\n        [side]: host[side] + host[measurement] - target[measurement]\n      }\n    };\n\n    data.offsets.target = {\n      ...target, ...{\n        [side]: (side === shiftVariation ? (shiftOffsets as any).start[side] : (shiftOffsets as any).end[side])\n      }\n    };\n  }\n\n  return data;\n}\n","/**\n * @copyright Valor Software\n * @copyright Federico Zivolo and contributors\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { getOffsets, getReferenceOffsets, updateContainerClass, setStyles } from './utils';\n\nimport { arrow, flip, preventOverflow, shift, initData } from './modifiers';\nimport { Data, Offsets, Options } from './models';\n\n\nexport class Positioning {\n  position(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return this.offset(hostElement, targetElement, false);\n  }\n\n  offset(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    position: string,\n    appendToBody?: boolean,\n    options?: Options\n  ): Data {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n\n    return chainOfModifiers.reduce(\n      (modifiedData, modifier) => modifier(modifiedData),\n      initData(targetElement, hostElement, position, options)\n    );\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean,\n  options?: Options,\n  renderer?: Renderer2\n): void {\n\n  const data = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody,\n    options\n  );\n\n  const offsets = getOffsets(data);\n\n  setStyles(targetElement, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  updateContainerClass(data, renderer);\n}\n","import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { positionElements } from './ng-positioning';\n\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\nimport { Options } from './models';\n\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\n@Injectable()\nexport class PositioningService {\n  private options: Options;\n  private update$$ = new Subject<null>();\n  private positionElements = new Map();\n  private triggerEvent$: Observable<number|Event>;\n  private isDisabled = false;\n\n  constructor(\n    ngZone: NgZone,\n    rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) platformId: number\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(\n          fromEvent(window, 'scroll', { passive: true }),\n          fromEvent(window, 'resize', { passive: true }),\n          /* tslint:disable-next-line: deprecation */\n          of(0, animationFrameScheduler),\n          this.update$$\n        );\n\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements\n          /* tslint:disable-next-line: no-any */\n            .forEach((positionElement: any) => {\n              positionElements(\n                _getHtmlElement(positionElement.target),\n                _getHtmlElement(positionElement.element),\n                positionElement.attachment,\n                positionElement.appendToBody,\n                this.options,\n                rendererFactory.createRenderer(null, null)\n              );\n            });\n        });\n      });\n    }\n  }\n\n  position(options: PositioningOptions): void {\n    this.addPositionElement(options);\n  }\n\n  get event$(): Observable<number|Event> {\n    return this.triggerEvent$;\n  }\n\n  disable(): void {\n    this.isDisabled = true;\n  }\n\n  enable(): void {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options: PositioningOptions): void {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition(): void {\n    this.update$$.next();\n  }\n\n  deletePositionElement(elRef: ElementRef): void {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options: Options) {\n    this.options = options;\n  }\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element;\n}\n"]}